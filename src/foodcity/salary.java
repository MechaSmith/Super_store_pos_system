/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package foodcity;

import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Senura
 */
public class salary extends javax.swing.JPanel {

    String d;
    String dd;
   
    public salary() {
        initComponents();
        loademp();
        d = "";
        dd = "";
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        m = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        y = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        twh = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        ph = new javax.swing.JTextField();
        epf = new javax.swing.JTextField();
        ES = new javax.swing.JTextField();
        sbsl = new javax.swing.JTextField();
        etf = new javax.swing.JTextField();
        nt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        epv = new javax.swing.JLabel();
        etv = new javax.swing.JLabel();
        nope = new javax.swing.JTextField();
        bns = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        dts = new javax.swing.JTextField();
        h1 = new javax.swing.JTextField();
        h2 = new javax.swing.JTextField();
        h3 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Prototype", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("S A L A R Y   M A N A G E M E N T");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 400, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Emp Id", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(40);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(120);
            jTable1.getColumnModel().getColumn(1).setMinWidth(150);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(200);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 260, 490));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Dates");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 240, 80, 30));

        jLabel9.setForeground(new java.awt.Color(51, 255, 51));
        jLabel9.setText("%");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 220, 20, 30));

        jLabel16.setForeground(new java.awt.Color(51, 255, 51));
        jLabel16.setText("%");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 280, 20, 30));

        id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        jPanel1.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, 250, 30));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "In time", "Out time", "Working hours"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 360, 360));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("W o r k i n g    E m p l o y e e");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 310, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total Working hours :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 590, 240, 30));

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/zr.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 110, 130, 110));

        m.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apri", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        jPanel1.add(m, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 250, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Y e a r :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 80, 30));

        y.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(y, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 250, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("E P F");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 200, 100, -1));

        twh.setEditable(false);
        twh.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(twh, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 590, 180, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("E m p Id :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 100, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("S U B   S A L A R Y");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 140, 130, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("E V A L U A T E   S A L A R Y");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 390, 180, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("N O P E ");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 450, 100, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("N E T    S A L A R Y");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 510, 120, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("B O N U S");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 330, 100, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("E T F");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 260, 100, -1));

        ph.setBackground(new java.awt.Color(51, 51, 51));
        ph.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        ph.setForeground(new java.awt.Color(51, 255, 51));
        ph.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phActionPerformed(evt);
            }
        });
        ph.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phKeyTyped(evt);
            }
        });
        jPanel1.add(ph, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 100, 180, 30));

        epf.setEditable(false);
        epf.setBackground(new java.awt.Color(51, 51, 51));
        epf.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        epf.setForeground(new java.awt.Color(51, 255, 51));
        epf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        epf.setText("8");
        jPanel1.add(epf, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 220, 180, 30));

        ES.setEditable(false);
        ES.setBackground(new java.awt.Color(51, 51, 51));
        ES.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        ES.setForeground(new java.awt.Color(51, 255, 51));
        ES.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(ES, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 410, 180, 30));

        sbsl.setBackground(new java.awt.Color(51, 51, 51));
        sbsl.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        sbsl.setForeground(new java.awt.Color(51, 255, 51));
        sbsl.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sbsl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sbslKeyTyped(evt);
            }
        });
        jPanel1.add(sbsl, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 160, 180, 30));

        etf.setEditable(false);
        etf.setBackground(new java.awt.Color(51, 51, 51));
        etf.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        etf.setForeground(new java.awt.Color(51, 255, 51));
        etf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        etf.setText("12");
        jPanel1.add(etf, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 280, 180, 30));

        nt.setEditable(false);
        nt.setBackground(new java.awt.Color(51, 51, 51));
        nt.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        nt.setForeground(new java.awt.Color(51, 255, 51));
        nt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(nt, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 530, 180, 30));

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/ecan.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 630, 140, 40));

        jButton3.setBackground(new java.awt.Color(255, 51, 51));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/esv.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 580, 140, 40));
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 280, 30, 30));
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 220, 30, 30));

        epv.setForeground(new java.awt.Color(51, 255, 51));
        jPanel1.add(epv, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 250, 130, 20));

        etv.setForeground(new java.awt.Color(51, 255, 51));
        jPanel1.add(etv, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 310, 130, 20));

        nope.setBackground(new java.awt.Color(51, 51, 51));
        nope.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        nope.setForeground(new java.awt.Color(51, 255, 51));
        nope.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nope.setText("0");
        nope.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nopeActionPerformed(evt);
            }
        });
        nope.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nopeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nopeKeyTyped(evt);
            }
        });
        jPanel1.add(nope, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 470, 180, 30));

        bns.setBackground(new java.awt.Color(51, 51, 51));
        bns.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        bns.setForeground(new java.awt.Color(51, 255, 51));
        bns.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bns.setText("0");
        bns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnsActionPerformed(evt);
            }
        });
        bns.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bnsKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bnsKeyTyped(evt);
            }
        });
        jPanel1.add(bns, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 350, 180, 30));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("P A Y   F O R   H O U R ");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 80, 150, -1));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 267, 120, 350));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("M o n t h :");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 90, 30));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(204, 0, 0));
        jLabel19.setText("Not Working ");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 220, 110, 30));

        jButton6.setBackground(new java.awt.Color(255, 153, 153));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setText("SET");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 640, 60, 30));

        dts.setEditable(false);
        dts.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dts.setForeground(new java.awt.Color(204, 0, 0));
        dts.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(dts, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 630, 120, 30));

        h1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        h1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(h1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 640, 50, 30));

        h2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        h2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(h2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 640, 50, 30));

        h3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        h3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(h3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 640, 50, 30));

        jLabel20.setForeground(new java.awt.Color(204, 255, 255));
        jLabel20.setText("Hours");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 624, -1, 20));

        jLabel21.setForeground(new java.awt.Color(204, 255, 255));
        jLabel21.setText("Minutes");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 624, -1, 20));

        jLabel22.setForeground(new java.awt.Color(204, 255, 255));
        jLabel22.setText("Sec");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 624, -1, 20));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/cncl.png"))); // NOI18N
        jButton7.setContentAreaFilled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 610, 70, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/bck.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 690));
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 690));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 690));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String dt = "";
        if (id.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Please enter employee id", "Error", JOptionPane.ERROR_MESSAGE);
            id.grabFocus();
        } else if (y.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Please enter year", "Error", JOptionPane.ERROR_MESSAGE);
            y.grabFocus();
        } else if (y.getText().length() != 4) {
            JOptionPane.showMessageDialog(this, "Please enter correct year", "Error", JOptionPane.ERROR_MESSAGE);
            y.grabFocus();
        } else {
            try {
                String month = m.getSelectedItem().toString();
                String mn="";
                if (month.equalsIgnoreCase("jan")) {
                    mn = "01";
                } else if (month.equalsIgnoreCase("feb")) {
                    mn = "02";
                } else if (month.equalsIgnoreCase("mar")) {
                    mn = "03";
                } else if (month.equalsIgnoreCase("apri")) {
                    
                    mn = "04";
                } else if (month.equalsIgnoreCase("may")) {
                    mn = "05";
                } else if (month.equalsIgnoreCase("jun")) {
                    mn = "06";
                } else if (month.equalsIgnoreCase("jul")) {
                    mn = "07";
                } else if (month.equalsIgnoreCase("aug")) {
                    mn = "08";
                } else if (month.equalsIgnoreCase("sep")) {
                    mn = "09";
                } else if (month.equalsIgnoreCase("oct")) {
                    mn = "10";
                } else if (month.equalsIgnoreCase("nov")) {
                    mn = "11";
                } else if (month.equalsIgnoreCase("dec")) {
                    mn = "12";
                }
                
                d = y.getText() + "-" + mn;
                System.out.println(d);
                ResultSet rs = db.search("select * from attendance where date like '%" + d + "%' and emp_emp_id='" + id.getText() + "'");
                DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
                dtm.setRowCount(0);

                while (rs.next()) {

                    Vector v = new Vector();
                    v.add(rs.getString("date"));
                    v.add(rs.getString("in_time"));
                    v.add(rs.getString("out_time"));

                    SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");

                    String d2 = rs.getString("out_time");
                    String d1 = rs.getString("in_time");

                    Date d11 = sdf.parse(d1);
                    Date d22 = sdf.parse(d2);
                    long diftime = 0;
                    diftime = d22.getTime() - d11.getTime();

                    long difsec = diftime / 1000 % 60;
                    long difmin = diftime / (60 * 1000) % 60;
                    long difho = diftime / (60 * 60 * 1000) % 24;

                    String ss = difho + ":" + difmin + ":" + difsec;
                    v.add(ss);

                    dtm.addRow(v);

                }
                if (rs.first()) {
                    dd = rs.getString("date");
                }
                
                genour();
                loadnotworking();

            } catch (Exception e) {
                e.printStackTrace();
            }
            ph.grabFocus();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        y.grabFocus();
    }//GEN-LAST:event_idActionPerformed

    private void phKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phKeyTyped
        char c = evt.getKeyChar();
        if (c >= '0' && c <= '9') {
        } else if (c == '.') {

        } else {
            evt.consume();
        }
    }//GEN-LAST:event_phKeyTyped

    private void sbslKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sbslKeyTyped
        char c = evt.getKeyChar();
        if (c >= '0' && c <= '9') {
        } else if (c == '.') {

        } else {
            evt.consume();
        }
    }//GEN-LAST:event_sbslKeyTyped

    private void phKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phKeyReleased
        gensal();

    }//GEN-LAST:event_phKeyReleased

    private void nopeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nopeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_nopeKeyTyped

    private void bnsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bnsKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_bnsKeyTyped

    private void phActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phActionPerformed
        bns.grabFocus();
    }//GEN-LAST:event_phActionPerformed

    private void bnsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bnsKeyReleased
        if (bns.getText().length() == 0) {
            nt.setText(ES.getText());
        } else {
            double n = Double.parseDouble(ES.getText());
            double b = Double.parseDouble(bns.getText());
            double tt = n + b;
            nt.setText("" + tt);
        }
    }//GEN-LAST:event_bnsKeyReleased

    private void nopeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nopeKeyReleased
        if (bns.getText().length() == 0) {
            if (nope.getText().length() == 0) {
                nt.setText(ES.getText());
            } else {
                double n = Double.parseDouble(ES.getText());
                double b = Double.parseDouble(nope.getText());
                double tt = n - b;
                nt.setText("" + tt);
            }
        } else {
            if (nope.getText().length() == 0) {
                nt.setText(ES.getText());
            } else {
                double n = Double.parseDouble(ES.getText());
                double b = Double.parseDouble(nope.getText());

                double tt = n - b;
                nt.setText("" + tt);
            }
        }
    }//GEN-LAST:event_nopeKeyReleased

    private void nopeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nopeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nopeActionPerformed

    private void bnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnsActionPerformed
        nope.grabFocus();
    }//GEN-LAST:event_bnsActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int x = jTable2.getRowCount();
        int s=0;
        if (x == 0) {
            JOptionPane.showMessageDialog(this, "Please search employee first", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (nt.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Please CREATE SALARY first", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {
            Date doo = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            int lol = 0;
            try {
                ResultSet rs = db.search("select * from salary where emp_emp_id='" + id.getText() + "'");
                while (rs.next()) {
                    if (rs.getString("ym").equals(d)) {
                        lol = 1;
                    }
                }
                if (lol == 0) {
                    System.out.println("athilkdf");
                     String month = m.getSelectedItem().toString();
                     String mn="";
                if (month.equalsIgnoreCase("jan")) {
                    mn = "01";
                } else if (month.equalsIgnoreCase("feb")) {
                    mn = "02";
                } else if (month.equalsIgnoreCase("mar")) {
                    mn = "03";
                } else if (month.equalsIgnoreCase("apr")) {
                    mn = "04";
                } else if (month.equalsIgnoreCase("may")) {
                    mn = "05";
                } else if (month.equalsIgnoreCase("jun")) {
                    mn = "06";
                } else if (month.equalsIgnoreCase("jul")) {
                    mn = "07";
                } else if (month.equalsIgnoreCase("aug")) {
                    mn = "08";
                } else if (month.equalsIgnoreCase("sep")) {
                    mn = "09";
                } else if (month.equalsIgnoreCase("oct")) {
                    mn = "10";
                } else if (month.equalsIgnoreCase("nov")) {
                    mn = "11";
                } else if (month.equalsIgnoreCase("dec")) {
                    mn = "12";
                }
                    String dn=d+mn;
                    System.out.println(month);
                    System.out.println(dn);
                    db.iud("insert into salary(date,epf,etf,nope,nettot,emp_emp_id,login_emp_emp_id,status,ym) "
                            + "values('" + sdf.format(doo) + "','" + epv.getText() + "','" + etv.getText() + "','" + nope.getText() + "','" + nt.getText() + "','" + id.getText() + "','" + log.empido + "','1','" + dn + "')");
                    ResultSet rss = db.search("select * from money_account where idmoney_account=1");
                    if (rss.next()) {
                        double av = Double.parseDouble(rss.getString("amount"));
                        double sl = Double.parseDouble(nt.getText());
                        double newav = av - sl;
                        db.iud("update money_account set amount='" + newav + "'");
                        reporta();
                       
                    JOptionPane.showMessageDialog(this, "Success");
                    }
                   s=1;

                } else {
                    JOptionPane.showMessageDialog(this, "Already payied", "Warning", JOptionPane.WARNING_MESSAGE);

                }

                cleary();
                if(s==1){
                 
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int h = 0;
        int m = 0;
        int s = 0;
        if (ph.getText().length() == 0) {
        } else if (h1.getText().length() == 0) {
            m = Integer.parseInt(h2.getText());
            s = Integer.parseInt(h3.getText());
            gennewsla(h, m, s);
        } else if (h2.getText().length() == 0) {
            h = Integer.parseInt(h1.getText());
            s = Integer.parseInt(h3.getText());
            gennewsla(h, m, s);
        } else if (h3.getText().length() == 0) {
            h = Integer.parseInt(h1.getText());
            m = Integer.parseInt(h2.getText());
            gennewsla(h, m, s);

        } else {
            h = Integer.parseInt(h1.getText());
            m = Integer.parseInt(h2.getText());
            s = Integer.parseInt(h3.getText());
            gennewsla(h, m, s);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        cleary();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Main.mp.removeAll();
        Main.mp.revalidate();
        run r=new run();
        Main.mp.add(r);
    }//GEN-LAST:event_jButton7ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ES;
    private javax.swing.JTextField bns;
    private javax.swing.JTextField dts;
    private javax.swing.JTextField epf;
    private javax.swing.JLabel epv;
    private javax.swing.JTextField etf;
    private javax.swing.JLabel etv;
    private javax.swing.JTextField h1;
    private javax.swing.JTextField h2;
    private javax.swing.JTextField h3;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JComboBox<String> m;
    private javax.swing.JTextField nope;
    private javax.swing.JTextField nt;
    private javax.swing.JTextField ph;
    private javax.swing.JTextField sbsl;
    private javax.swing.JTextField twh;
    private javax.swing.JTextField y;
    // End of variables declaration//GEN-END:variables

    private void loademp() {
        try {
            ResultSet rs = db.search("select a.*,b.* from(emp a inner join login b on a.emp_id=b.emp_emp_id)where status='1'");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

            while (rs.next()) {

                Vector v = new Vector();
                v.add(rs.getString("emp_id"));
                v.add(rs.getString("fname") + "  " + rs.getString("lname"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void genour() {
        int hour = 0;
        int min = 0;
        int sec = 0;
        double our = 0;

        for (int i = 0; i < jTable2.getRowCount(); i++) {
            String time[] = (jTable2.getValueAt(i, 3).toString()).split(":");

            hour = hour + Integer.parseInt(time[0]);
            min = min + Integer.parseInt(time[1]);
            sec = sec + Integer.parseInt(time[2]);

            int totalSeconds = ((hour * 60) + min) * 60 + sec;

            int hours = totalSeconds / 3600;
            int minutes = ((totalSeconds) / 60) % 60;
            int seconds = totalSeconds % 60;
            our = our + 1;

            if (sec >= 60) {
                min++;
                sec = sec % 60;
            }
            if (min >= 60) {
                hour++;
                min = min % 60;
            }
        }
        twh.setText(hour + ":" + min + ":" + sec);
        h1.setText("" + hour);
        h2.setText("" + min);
        h3.setText("" + sec);
    }

    private void loadnotworking() {
        int tbl = jTable2.getRowCount();
        if (tbl != 0) {
            try {

                int year = 0;
                int months = 0;
                int day = 0;

                String time[] = dd.split("-");

                year = Integer.parseInt(time[0]);
                months = Integer.parseInt(time[1]);
                day = Integer.parseInt(time[2]);
                months--;

                Calendar cal = Calendar.getInstance();
                cal.set(Calendar.DAY_OF_MONTH, 1);
                cal.set(year, months, 1);
                int myMonth = cal.get(Calendar.MONTH);
                SimpleDateFormat sdff = new SimpleDateFormat("yyyy-MM-dd");
                DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
                dtm.setRowCount(0);
                while (myMonth == cal.get(Calendar.MONTH)) {
                    int lol = 0;
                    ResultSet rs = db.search("select * from attendance where date like '%" + d + "%' and emp_emp_id='" + id.getText() + "'");
                    while (rs.next()) {
                        String af = rs.getString("date");
                        String df = sdff.format(cal.getTime());

                        if (af.equals(df)) {
                            lol = 1;
                        }
                    }
                    if (lol == 0) {

                        Vector v = new Vector();
                        v.add(sdff.format(cal.getTime()));
                        dtm.addRow(v);
                        //System.out.println(sdff.format(cal.getTime()));
                    }
                    cal.add(Calendar.DAY_OF_MONTH, 1);
                    // System.out.println(sdff.format(cal.getTime()));
                }

                int x = jTable3.getRowCount();
                dts.setText("" + x + " Days");
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "No data", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void gensal() {
        double phour = 0;
        double hour = 0;
        double tot = 0;
        double epff = 0;
        double etff = 0;
        double nop = 0;
        double bn = 0;
        if (ph.getText().length() == 0) {
            sbsl.setText(null);
        } else {
            phour = Double.parseDouble(ph.getText());
            bn = Double.parseDouble(bns.getText());
            if (epf.getText().length() == 0) {

                phour = Double.parseDouble(ph.getText());
                phour = Double.parseDouble(ph.getText());

                int hours = 0;
                int min = 0;
                int sec = 0;

                String time[] = twh.getText().split(":");

                hours = Integer.parseInt(time[0]);
                min = Integer.parseInt(time[1]);
                sec = Integer.parseInt(time[2]);

                double totalhours = (((hours * 60) + min) * 60 + sec) / 3600;

                double tthh = totalhours / 3600;
                etff = tot * Double.parseDouble(etf.getText()) / 100;

                tot = phour * tthh;
                if (nope.getText().length() == 0) {

                } else {
                    nop = Double.parseDouble(nope.getText());
                    tot = tot - nop;
                }
                tot = tot + bn;
                etv.setText("" + etff);
                ES.setText("" + tot);
                nt.setText("" + tot);
            } else {

                int hours = 0;
                int min = 0;
                int sec = 0;

                String time[] = twh.getText().split(":");

                hours = Integer.parseInt(time[0]);
                min = Integer.parseInt(time[1]);
                sec = Integer.parseInt(time[2]);

                double totalhours = ((hours * 60) + min) * 60 + sec;
                double tthh = totalhours / 3600;

                tot = phour * tthh;
                sbsl.setText("" + tot);
                epff = tot * Double.parseDouble(epf.getText()) / 100;
                etff = tot * Double.parseDouble(etf.getText()) / 100;
                tot = tot - epff;
                System.out.println(tot);
                if (nope.getText().length() == 0) {
                    System.out.println("lol");
                } else {
                    nop = Double.parseDouble(nope.getText());
                    tot = tot - nop;
                }
                tot = tot + bn;
                etv.setText("" + etff);
                epv.setText("" + epff);
                ES.setText("" + tot);
                nt.setText("" + tot);
            }

        }
    }

    private void cleary() {
        id.setText(null);
        y.setText(null);
        m.setSelectedItem("Jan");
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);
        DefaultTableModel dtm1 = (DefaultTableModel) jTable3.getModel();
        dtm1.setRowCount(0);
        twh.setText(null);
        dts.setText(null);
        ph.setText(null);
        sbsl.setText(null);
        epv.setText(null);
        etv.setText(null);
        bns.setText("" + 0);
        ES.setText(null);
        nope.setText("" + 0);
        nt.setText("" + 0);

    }

    private void gennewsla(int h, int m, int s) {
        double phour = 0;
        double hour = 0;
        double tot = 0;
        double epff = 0;
        double etff = 0;
        double nop = 0;
        double bn = 0;
        if (ph.getText().length() == 0) {
            sbsl.setText(null);
        } else {
            phour = Double.parseDouble(ph.getText());
            bn = Double.parseDouble(bns.getText());
            if (epf.getText().length() == 0) {

                phour = Double.parseDouble(ph.getText());
                phour = Double.parseDouble(ph.getText());

                int hours = 0;
                int min = 0;
                int sec = 0;

                hours = h;
                min = m;
                sec = s;

                double totalhours = (((hours * 60) + min) * 60 + sec) / 3600;

                double tthh = totalhours / 3600;
                etff = tot * Double.parseDouble(etf.getText()) / 100;

                tot = phour * tthh;
                if (nope.getText().length() == 0) {

                } else {
                    nop = Double.parseDouble(nope.getText());
                    tot = tot - nop;
                }
                tot = tot + bn;
                etv.setText("" + etff);
                ES.setText("" + tot);
                nt.setText("" + tot);
            } else {

                int hours = 0;
                int min = 0;
                int sec = 0;

                hours = h;
                min = m;
                sec = s;

                double totalhours = ((hours * 60) + min) * 60 + sec;
                double tthh = totalhours / 3600;

                tot = phour * tthh;
                sbsl.setText("" + tot);
                epff = tot * Double.parseDouble(epf.getText()) / 100;
                etff = tot * Double.parseDouble(etf.getText()) / 100;
                tot = tot - epff;
                System.out.println(tot);
                if (nope.getText().length() == 0) {
                    System.out.println("lol");
                } else {
                    nop = Double.parseDouble(nope.getText());
                    tot = tot - nop;
                }
                tot = tot + bn;
                etv.setText("" + etff);
                epv.setText("" + epff);
                ES.setText("" + tot);
                nt.setText("" + tot);
            }

        }
    }

    private void reporta() {
        try {
           
            Double sb = Double.parseDouble(sbsl.getText());
            String path = "C:\\ProgramData\\supercity\\2\\salary.jrxml";
            JasperReport jr = JasperCompileManager.compileReport(path);
            Map<String, Object> m = new HashMap<>();
            m.put("dat", id.getText());
            m.put("id", d);
            m.put("sbsl", sb);
            JasperPrint jp = JasperFillManager.fillReport(jr, m, db.con());
            JasperViewer.viewReport(jp, false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
